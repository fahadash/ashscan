using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Sockets;
using System.Text;
using System.Threading.Tasks;

namespace ExploitChecker
{
    using Contracts;

    namespace Services
    {
        public class EfNetRblExploitChecker : IPAddressExploitChecker
        {
            public EfNetRblExploitChecker()
                : base()
            {
            }

            protected override string FormatAddress(byte[] addressBytes)
            {
                return string.Format
                (
                    "{0}.{1}.{2}.{3}.rbl.efnetrbl.org",
                    Convert.ToInt32(addressBytes[3]),
                    Convert.ToInt32(addressBytes[2]),
                    Convert.ToInt32(addressBytes[1]),
                    Convert.ToInt32(addressBytes[0])
                );
            }

            protected override IEnumerable<ExploitType> CheckHostAddresses(IPAddress[] hostAddresses)
            {
                return hostAddresses
                        .Select(x => Convert.ToInt32(x.GetAddressBytes()[3]))
                        .Where(x => x >= 1 && x <= 5)
                        .Select(x => x + 17)
                        .Where(x => Enum.IsDefined(typeof(ExploitType), x))
                        .Select(x => (ExploitType)x);
            }
        }
    }
}