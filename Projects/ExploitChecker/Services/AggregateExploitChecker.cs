using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ExploitChecker
{
    using Contracts;

    namespace Services
    {
        public class AggregateExploitChecker : IExploitChecker
        {
            private IExploitChecker[] exploitCheckers;

            public AggregateExploitChecker(params IExploitChecker[] exploitCheckers)
                : base()
            {
                this.exploitCheckers = exploitCheckers;
            }

            protected IExploitChecker[] ExploitCheckers
            {
                get
                {
                    return this.exploitCheckers;
                }
            }

            public IEnumerable<ExploitType> Check(Func<string> data)
            {
                return ExploitCheckers.Aggregate(Enumerable.Empty<ExploitType>(), (exploitTypes, explotChecker) => exploitTypes.Union(explotChecker.Check(() => data.Invoke()))).Distinct().OrderBy(et => et);
            }
        }
    }
}